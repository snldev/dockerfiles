name: Build and Push Docker Image(s) to Container Registry

on:
  push:
    branches: ['main']
    paths-ignore: ['*.md', '*.sublime-project', '.gitignore', 'LICENSE']

jobs:
  get_changed_dockerfiles:
    name: Get changed dockerfiles
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    outputs:
      IMAGES_TO_BUILD: ${{ steps.set_images.outputs.IMAGES_TO_BUILD }}
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
        with:
          fetch-depth: 0
      - name: Get changed files
        run: |
          echo '# Getting changed files' >> "${GITHUB_STEP_SUMMARY}"
          changed_files="$(git diff --name-only ${{ github.event.before }} HEAD | xargs)"
          echo "$changed_files"
          printf 'CHANGED_FILES=%s\n' "${changed_files}" >> "${GITHUB_ENV}"
      - name: Get changed docker image names
        shell: python
        run: |
          import json
          from os import environ

          files = environ.get("CHANGED_FILES").split(' ')
          images = []

          for file in files:
            parts = file.split("/")

            if parts[-1] == "Dockerfile":
              images.append(parts[-2])

          # save retreived images as json array

          with open(environ.get("GITHUB_ENV"), 'a') as f:
            f.write('DOCKER_IMAGES=' + json.dumps(images) + '\n')
      - name: Set changed docker images
        run: echo "DOCKER_IMAGES=${DOCKER_IMAGES}" >> $GITHUB_OUTPUT

  build_push:
    name: Build and push {{ matrix.image }} to Container Registry
    runs-on: ubuntu-latest
    needs: get_changed_dockerfiles
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    strategy:
      matrix:
        image: ${{ fromJson( needs.get_changed_dockerfiles.outputs.DOCKER_IMAGES ) }}
    steps:
      - name: Check out repository
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9
      - name: Login to Container Registry
        uses: docker/login-action@465a07811f14bebb1938fbed4728c6a1ff8901fc
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set docker image metadata
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: ghcr.io/{{ github.repository_owner }}/{{ matrix.image }}
          tags: |
            type=schedule,pattern={{ date 'YYYYMMDD' }}
            type=raw,value=latest
      - name: Build and push Docker image
        uses: docker/build-push-action@2eb1c1961a95fc15694676618e422e8ba1d63825
        with:
          context: .
          file: ./{{ matrix.image }}/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
